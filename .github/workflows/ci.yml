name: CI

on:
  push:
    branches: [main, normal]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio

      - name: Update PlatformIO platforms/libs
        run: pio update

      # optional, speeds up repeated runs by caching ~/.platformio and .pio
      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
            .pio
          key: ${{ runner.os }}-pio-${{ hashFiles('platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pio-

      - name: Run native unit tests
        run: pio test -e native --junit-output test-results-native.xml

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report-native
          path: test-results-native.xml

      - name: Build firmware (ELF)
        run: pio run -e nucleo_f303k8_mbed

      - name: Rename firmware with commit SHA
        run: mv .pio/build/nucleo_f303k8_mbed/firmware.elf .pio/build/nucleo_f303k8_mbed/firmware-${GITHUB_SHA}.elf

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-elf-${{ github.sha }}
          path: .pio/build/nucleo_f303k8_mbed/firmware-${{ github.sha }}.elf

  release:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download firmware artifact
        uses: actions/download-artifact@v4
        with:
          pattern: firmware-elf-${{ github.sha }}
          path: build-output

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: build-output/firmware-${{ github.sha }}.elf
          name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
